heroku login
heroku open

heroku release (checking release)

heroku ps
heroku ps to determine the number of dynos that are executing. The list indicates the process type in the left column, and
the command corresponding to that process type in the right column:

heroku create (Deploy the app)

git push heroku branchaname:master(Define a Procfile)

heroku ps:scale web=1 (Ensure that at least one instance of the app is running)

heroku logs --tail (view logs)

(Define a Procfile)
<process type>: <command>
<process type> is an alphanumeric name for your command, such as web, worker, urgentworker, clock, and so on.
<command> indicates the command that every dyno of the process type should execute on startup, such as rake jobs:work.

Procfile, a text file in root directoryof application,to explicitly declare what command should be executed to start your app.
We can use a Procfile to declare a variety of process types, including:
  Your app’s web server
  Multiple types of worker processes
  A singleton process, such as a clock
  Tasks to run before a new release is deployed
web: gunicorn project_name.wsgi
release: python manage.py migrate


heroku local
(start your app locally)
To locally start a particular process type, specify the process type. For example, “web” or “worker”:
    heroku local web
To use a different Procfile, use the -f flag:
    heroku local -f Procfile.test.
To use a different environment file, use the -e flag:
    heroku local -e .env.test.
To use a different port, use the -p flag:
    heroku local -p 7000. If you don’t specify a port, 5000 is used.
    
heroku configs (To view all of your app’s config vars, )
heroku configs >> .env (copy configs from production to local env)

 To use release phase push a Docker image named release:
    heroku container:push release
 When you release your Docker images, by running heroku container:release, your release phase process type needs to be specified:
    heroku container:release web release

